import { ElementRef, OnInit } from '@angular/core';
import { AsyncSubject } from 'rxjs';
import { CornerDotType, CornerSquareType, DotType, DrawType, ErrorCorrectionLevel, FrameStyle, Gradient, Mode, Options, ShapeType, TemplateType, TypeNumber, UnknownObject } from './ngx-qrcode-styling.options';
import { NgxQrcodeStylingService } from './ngx-qrcode-styling.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgxQrcodeStylingComponent implements OnInit {
    private canvas;
    private service;
    /**
     * Options
     */
    config: Options;
    /**
     * TemplateType
     */
    template: TemplateType;
    /**
     * DrawType
     */
    type: DrawType;
    /**
     * ShapeType
     */
    shape: ShapeType;
    /**
     * number
     */
    width: number;
    /**
     * number
     */
    height: number;
    /**
     * number
     */
    margin: number;
    /**
     * string
     */
    data: string;
    /**
     * string
     */
    image: string;
    /**
     * number
     */
    scale: number;
    /**
     * string
     */
    rotate: number;
    /**
     * object
     */
    frameOptions: {
        style?: FrameStyle;
        height?: number;
        width?: number;
        x?: number;
        y?: number;
        texts?: UnknownObject[];
        contents?: UnknownObject[];
        containers?: UnknownObject[];
    };
    /**
     * object
     */
    qrOptions: {
        typeNumber?: TypeNumber;
        mode?: Mode;
        errorCorrectionLevel?: ErrorCorrectionLevel;
    };
    /**
     * object
     */
    imageOptions: {
        hideBackgroundDots?: boolean;
        imageSize?: number;
        crossOrigin?: string;
        margin?: number;
    };
    /**
     * object
     */
    dotsOptions: {
        type?: DotType;
        color?: string;
        gradient?: Gradient;
    };
    /**
     * object
     */
    cornersSquareOptions: {
        type?: CornerSquareType;
        color?: string;
        gradient?: Gradient;
    };
    /**
     * object
     */
    cornersDotOptions: {
        type?: CornerDotType;
        color?: string;
        gradient?: Gradient;
    };
    /**
     * object
     */
    backgroundOptions: {
        round?: number;
        color?: string;
        gradient?: Gradient;
    };
    constructor(canvas: ElementRef, service: NgxQrcodeStylingService);
    ngOnInit(): void;
    /**
     * create
     * @param config
     * @returns
     */
    create(config: Options): AsyncSubject<any>;
    /**
     * update
     * @param config
     * @param configUpdate
     * @returns
     */
    update(config: Options, configUpdate: Options): AsyncSubject<any>;
    /**
     * download image
     * @param fileName eg: demo.png
     * @param timeout
     * @returns
     */
    download(fileName: string, timeout?: number): AsyncSubject<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxQrcodeStylingComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgxQrcodeStylingComponent, "ngx-qrcode-styling", never, { "template": "template"; "scale": "scale"; "rotate": "rotate"; "config": "config"; "type": "type"; "shape": "shape"; "width": "width"; "height": "height"; "margin": "margin"; "data": "data"; "image": "image"; "frameOptions": "frameOptions"; "qrOptions": "qrOptions"; "imageOptions": "imageOptions"; "dotsOptions": "dotsOptions"; "cornersSquareOptions": "cornersSquareOptions"; "cornersDotOptions": "cornersDotOptions"; "backgroundOptions": "backgroundOptions"; }, {}, never, ["*"], false, never>;
}

//# sourceMappingURL=ngx-qrcode-styling.component.d.ts.map